#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# Tool to dump in JSON the database along with the associated ranking
#
# Software is free software released under the "GNU Affero General Public License v3.0"
#
# Copyright (c) 2012-2019  Alexandre Dulaunoy - a@foo.be
# Copyright (c) 2015-2019  Pieter-Jan Moreels - pieter-jan@pidgey.net

# Imports
import click
import json

from .last import dump_last
from .. import DatabaseLayer


@click.command()
@click.option('-l', '--limit', help='Limit output to n elements')
@click.option('-r', '--ranking', help='Include ranking value')
@click.option('-v', '--via4', help='Include VIA4 mappings')
@click.option('-c', '--capec', help='Include CAPEC details')
def dump(limit, ranking, via4, capec):
    """Dump database in JSON format."""
    db = DatabaseLayer()
    for cve in db.CVE.last(limit=limit, via4=via4, ranking=ranking):
        item = cve.dict(capec, human_dates=True)
        click.echo(f'{json.dumps(item, sort_keys=True)}')


@dump.group()
@click.pass_context
def _dump(ctx):
    if ctx.invoked_subcommand is None | 'dump':
        return dump(ctx)
    elif ctx.invoked_subcommand is dump_last | 'last':
        return dump_last(ctx)
    else:
        ...


if __name__ == '__main__':
    dump(input)
