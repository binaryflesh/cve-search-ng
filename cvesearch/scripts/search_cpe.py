#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# Software is free software released under the "GNU Affero General Public License v3.0"
#
# Copyright (c) 2014       psychedelys
# Copyright (c) 2015-2019  Pieter-Jan Moreels - pieter-jan@pidgey.net
# Copyright (c) 2015-2019  Alexandre Dulaunoy - a@foo.be

# Imports
from click import pass_context, STRING, BOOL
import json
import urllib.parse

from .. import DatabaseLayer
from . import _search


@_search.command('cpe')
@pass_context
@_search.argument('-s', '--search', type=STRING)
@_search.argument('-o', '--output', type=STRING, choices=['expanded, compact, json'])
@_search.option('-f', type=BOOL, default=False)
def search_cpe(cpe, frmt, other):
    """Search for CPE with a pattern.

    :param cpe: search cpe in list
    :type cpe: str
    :param frmt: output format. Supported options: expanded compact json
    :type frmt: str
    :param other: expand the cpe query to all cpe indices. Needs cpeother activated.
    :type other: bool
    """
    data = DatabaseLayer().CPE.get_regex(urllib.parse.quote(cpe), other)
    if frmt == 'json':
        o = [{'id': i.id, 'title': i.title} for i in data]
        return _search.echo(f'{json.dumps(o, sort_keys=True, indent=4)}')
    elif frmt == 'compact':
        return _search.echo('\n'.join([f'{i.id}' for i in data]))
    else:
        return _search.echo('\n'.join([f'{i.id}  {i.title}' for i in data]))


if __name__ == '__main__':
    _search.command('cpe', input)
