#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# Lookup NIST CVE Reference Key/Maps from a CVE
#
# Software is free software released under the "GNU Affero General Public License v3.0"
#
# Copyright (c) 2015-2019  Alexandre Dulaunoy - a@foo.be

# Imports
import click
from cvesearch import Configuration


ref_urls = {"MS": "https://technet.microsoft.com/library/security/",
            "SECUNIA": "http://secunia.com/advisories/",
            "SREASON": "http://securityreason.com/security_alert",
            "CERT": "http://www.cert.org/advisories",
            "BID": "http://www.securityfocus.com/bid/",
            "AIXAPART": "",
            "ALLAIRE": "",
            "APPLE": "",
            "ASCEND": "",
            "ATSTAKE": "",
            "AUSCERT": "",
            "BEA": "",
            "BINDVIEW": "",
            "SECTRACK": "http://www.securitytracker.com/id/",
            "MANDRIVA": "http://www.mandriva.com/security/advisories?name="}


@click.command()
@click.argument('-c', '--cve', help='CVE id to lookup')
@click.option('-u', '--url-expansion', is_flag=True, default=False, help='Enable URL expansion')
# @click.argument('-v', '--verbose', is_flag=True, default=False, help='Verbose output')
def cve_refs(cve, url_expansion):
    """Lookup NIST CVE Reference key-value mappings given a CVE"""
    r = Configuration.getRedisRefConnection()
    if not r:
        click.echo('Could not connect to redis server.')
        return False
    refs = r.smembers(cve)
    if not refs:
        click.echo(f'{cve} has no NIST references')
        return None
    for ref in refs:
        if url_expansion:
            (provider, refid) = ref.split(':', 1)
            if provider in ref_urls.keys():
                click.echo(f'{ref_urls[provider]}{refid}')
            elif provider == 'CONFIRM':
                click.echo(f'{refid}')
            else:
                click.echo(f'{ref}')
        else:
            click.echo(f'{ref}')


if __name__ == '__main__':
    click.command(cve_refs)
